---
AWSTemplateFormatVersion: 2010-09-09
Description: ECS task role and other resources for the comms composer service

Parameters:
  Environment:
    Type: String
    AllowedValues: [ uat, prd ]
  VPC:
    Type: AWS::EC2::VPC::Id
  ECSInstancesSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The security group for the EC2 instances in the ECS cluster
  LoadBalancerSubnets:
    Description: Choose all the public subnets in the VPC
    Type: List<AWS::EC2::Subnet::Id>
  LoadBalancerCertificateArn:
    Description: ARN of the ACM cert to use for the load balancer
    Type: String



Resources:

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: read-templates-bucket
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 's3:Get*'
                - 's3:List*'
              Resource:
                - 'arn:aws:s3:::ovo-comms-templates'
                - 'arn:aws:s3:::ovo-comms-templates/*'
        -
          PolicyName: write-pdf-bucket
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 's3:Put*'
              Resource:
                - !Sub 'arn:aws:s3:::${Environment}-ovo-comms-pdfs'
                - !Sub 'arn:aws:s3:::${Environment}-ovo-comms-pdfs/*'
        -
          PolicyName: read-credstash
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 'kms:Decrypt'
              Resource:
                - !Sub "arn:aws:kms:eu-west-1:${AWS::AccountId}:key/*"
            - Effect: Allow
              Action:
                - 'dynamodb:GetItem'
                - 'dynamodb:Query'
              Resource:
                - !Sub "arn:aws:dynamodb:eu-west-1:${AWS::AccountId}:table/credential-store"
        -
          PolicyName: read-aiven-bucket
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 's3:Get*'
                - 's3:List*'
              Resource:
                - 'arn:aws:s3:::ovo-comms-aiven'
                - 'arn:aws:s3:::ovo-comms-aiven/*'

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Open port 443 to OVO IP range'

      # All the CIDR blocks for the various OVO offices and VPNs
      # Based on https://ovotech.atlassian.net/wiki/pages/viewpage.action?pageId=40435724
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 137.221.132.180/32 # Bristol Rivergate
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 137.221.132.196/32 # Bristol Rivergate again
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 137.221.132.212/32 # NGD
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 137.221.132.228/32 # NGD again
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 109.232.58.84/32 # London Astley House
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 109.232.60.4/32 # London Astley House again
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 137.221.142.4/32 # Bristol Templeback
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 137.221.142.20/32 # Bristol Templeback again
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 137.221.144.116/32 # London Kensington Church Street
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 137.221.144.132/32 # London Kensington Church Street again
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 84.246.176.192/27 # BCP site

      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '32768'
          ToPort: '61000'
          DestinationSecurityGroupId:
            Ref: ECSInstancesSecurityGroup
      Tags:
        - Key: Environment
          Value:
            Ref: Environment
      VpcId:
        Ref: VPC

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: ovo-comms-logs
        - Key: access_logs.s3.prefix
          Value: !Sub "composer/${Environment}/loadbalancer"
      Scheme: internet-facing
      SecurityGroups:
        - Ref: LoadBalancerSecurityGroup
      Subnets:
        Ref: LoadBalancerSubnets
      Tags:
        - Key: Environment
          Value:
            Ref: Environment

  ECSTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: '/admin/health'
      HealthCheckProtocol: HTTP
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30
      Tags:
        - Key: Environment
          Value:
            Ref: Environment
      VpcId:
        Ref: VPC

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref 'ECSTargetGroup'
      LoadBalancerArn: !Ref 'LoadBalancer'
      Port: '443'
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref 'LoadBalancerCertificateArn'

  ECSALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'ECSTargetGroup'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'ALBListener'
      Priority: 1

  AuditLogELBErrorResponseAlarm:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Namespace: "AWS/ApplicationELB"
        Dimensions:
          - Name: LoadBalancer
            Value: !GetAtt 'LoadBalancer.LoadBalancerFullName'
        MetricName: HTTPCode_ELB_5XX_Count
        AlarmActions:
          - !ImportValue "CloudwatchPagerDutyTopic"
        OKActions:
          - !ImportValue "CloudwatchPagerDutyTopic"
        Period: 60
        EvaluationPeriods: 1
        Statistic: Sum
        Threshold: 1
