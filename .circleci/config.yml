version: 2

defaults:
- &defaults
  docker:
  - image: circleci/openjdk:8-jdk

- &restore-cache
  restore_cache:
    keys:
    - dependencies-{{ .Branch }}-{{ checksum "build.sbt" }}
    - dependencies-{{ .Branch }}
    - dependencies

- &install-python-pip
  run:
    name: Install python-dev, pip
    command: sudo apt-get update && sudo apt-get install -y libpython2.7-dev python-pip

- &install-awscli-credstash
  run:
    name: Install awscli and credstash
    command: sudo pip install awscli credstash==1.14.0

- &create-aws-credentials
  run:
    name: Login to AWS as circleci seems to ignore the setting
    command: |
      mkdir ~/.aws
      echo "[default]" >> ~/.aws/credentials
      echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
      echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

- &login-to-ecr
  run:
    name: Login to ECR
    command: "aws --region eu-west-1 ecr get-login --no-include-email | bash"

- &add-github-host-ssh-key
  run:
    name: Configure git credentials
    command: |
      echo 'Adding the github host SSH key...'
      mkdir -p -m 0700 ~/.ssh/
      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

- &configure-git-credentials
  run:
    name: Configure git credentials
    command: |
      git config user.name ovo-comms-circleci
      git config user.email "hello.comms@ovoenergy.com"

jobs:
  build:

    <<: *defaults

    steps:

    - checkout

    - *restore-cache

    - run:
        command: sbt update
        no_output_timeout: 20m

    - save_cache:
        key: dependencies-{{ .Branch }}-{{ checksum "build.sbt" }}
        paths:
        - /home/circleci/.ivy2
        - /home/circleci/.sbt

    - run:
        command: sbt compile
        no_output_timeout: 20m

    - persist_to_workspace:
        root: .
        paths:
        - project/target
        - target


  unit_test:

    <<: *defaults

    steps:

    - checkout

    - *restore-cache

    - attach_workspace:
        at: .

    - run:
        command: sbt test

    - store_test_results:
        path: target/test-reports

    - store_artifacts:
        path: target/unit-test.log
        destination: logs/unit-test.log

    - persist_to_workspace:
        root: .
        paths:
        - target/scala-2.12/test-classes

  integration_test:

    machine:
      enabled: true

    environment:
      JAVA_OPTS: "-Xms1024m -Xmx1024m -XX:MaxMetaspaceSize=512m"

    steps:

    - checkout

    - *restore-cache

    - attach_workspace:
        at: .

    - run:
        command: sbt it:test

    - store_test_results:
        path: target/test-reports

    - store_artifacts:
        path: target/it.log
        destination: logs/integration_test.log

    - store_artifacts:
        path: target/it-docker.log
        destination: logs/integration_test-docker.log

    - persist_to_workspace:
        root: .
        paths:
        - target/scala-2.12/it-classes

  service_test:

    machine:
      enabled: true

    environment:
      JAVA_OPTS: "-Xms1024m -Xmx1024m -XX:MaxMetaspaceSize=512m"

    steps:

    - checkout

    - *restore-cache

    - *install-python-pip

    - *install-awscli-credstash

    - *create-aws-credentials

    - *login-to-ecr

    - attach_workspace:
        at: .

    - run:
        command: sbt servicetest:test

    - store_test_results:
        path: target/test-reports

    - store_artifacts:
        path: target/service-test.log
        destination: logs/service-test.log

    - store_artifacts:
        path: target/service-test-docker.log
        destination: logs/service-test-docker.log

    - persist_to_workspace:
        root: .
        paths:
        - target/scala-2.12/servicetest-classes

  tag:

    <<: *defaults

    steps:

    - checkout

    - attach_workspace:
        at: .

    - *add-github-host-ssh-key

    - *configure-git-credentials

    - run:
        command: "build/tag.sh"

    # Update the workspace to make sure the git tags are available to the
    # downstream jobs
    - persist_to_workspace:
        root: .
        paths:
        - .git

    - *persist-target


  publish:

    <<: *defaults

    steps:

    - setup_remote_docker:
        docker_layer_caching: true

    - checkout

    - *restore-cache

    - *install-python-pip

    - *install-awscli-credstash

    - *create-aws-credentials

    - *login-to-ecr

    - attach_workspace:
        at: .

    - run:
        command: "sbt publish"
        no_output_timeout: 20m

    - *persist-target

  deploy-to-uat:

    <<: *defaults

    environment:
      AWS_REGION: "eu-west-1"

    steps:

    - checkout

    - *restore-cache

    - *install-python-pip

    - *install-awscli-credstash

    - *create-aws-credentials

    - attach_workspace:
        at: .

    - run:
        command: |
          build/deploy_to_ecs.sh -s composer -c ecs-cluster-UATv2 UAT `git describe --abbrev=0 --tags | cut -c2-` aws/container-definition.json

  e2e_test:

    <<: *defaults

    steps:

    - *add-github-host-ssh-key

    - *install-python-pip

    - *install-awscli-credstash

    - run:
        name: Clone the e2e test project
        command: git clone git@github.com:ovotech/comms-e2e-tests

    - run:
        name: Run e2e tests
        command: cd comms-e2e-tests && sbt test

  deploy-to-prd:

    <<: *defaults

    environment:
      AWS_REGION: "eu-west-1"

    steps:

    - checkout

    - *restore-cache

    - *install-python-pip

    - *install-awscli-credstash

    - *create-aws-credentials

    - attach_workspace:
        at: .

    - run:
        command: |
          build/deploy_to_ecs.sh -s composer -c ecs-cluster-PRDv2 PRD `git describe --abbrev=0 --tags | cut -c2-` aws/container-definition.json


workflows:

  version: 2

  build_test_release:
    jobs:
    - build:
        filters:
          branches:
            ignore: deploy-to-uat

    - unit_test:
        requires:
        - build

    - service_test:
        requires:
        - build

    - integration_test:
        requires:
        - build

    - tag:
        requires:
        - build
        - unit_test
        - service_test
        - integration_test
        filters:
          branches:
            only: master

    - publish:
        requires:
        - tag

    - deploy-to-uat:
        requires:
        - publish

    - e2e_test:
        requires:
        - deploy-to-uat

    - deploy-to-prd:
        requires:
        - e2e_test

  deploy-to-uat-only:
    jobs:

    - build:
        filters:
          branches:
            only: deploy-to-uat

    - unit_test:
        requires:
        - build

    - integration_test:
        requires:
        - build

    - service_test:
        requires:
        - build

    - publish:
        requires:
        - unit_test
        - service_test
        - integration_test

    - deploy-to-uat:
        requires:
        - publish

    - e2e_test:
        requires:
        - deploy-to-uat


experimental:
  notify:
    branches:
      only:
      - master


